{"version":3,"sources":["registerServiceWorker.js","constants.js","reducers/todos.js","reducers/todoForm.js","reducers/projects.js","reducers/index.js","components/Topbar.js","components/ProjectForm.js","actions/projects.js","components/Sidebar.js","actions/todos.js","components/TodoForm.js","components/TodoContainer.js","components/AddTodoContainer.js","components/TodoListContainer.js","selectors.js","components/DateViews.js","components/ProjectViews.js","components/ViewContainer.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Types","ADD_TODO","TODO","Modes","todoDefault","id","title","completed","dueDate","project","mode","todos","arguments","length","undefined","action","type","map","t","Object","objectSpread","toConsumableArray","concat","filter","todoFormId","projectDefault","name","subProjects","projects","combineReducers","components_Topbar","react_default","a","createElement","className","ProjectForm","addProject","_this","trim","props","cancel","_this2","this","isOpen","autoFocus","placeholder","value","onKeyPress","e","key","onChange","setState","target","onClick","Component","connect","dispatch","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","Sidebar","isProjectFormOpen","toggleProjects","openProjectForm","_this$props","_this$state","page","pathname","today","moment","format","Link","to","index_es","icon","faInbox","todayCal","isSame","faCalendarAlt","isBefore","add","style","transform","faAngleRight","height","p","components_ProjectForm","withRouter","enableTodoEditMode","_ref5","_ref6","_callee5","_context5","t0","abrupt","_x5","disableTodoEditMode","_ref7","_ref8","_callee6","_context6","_x6","TodoForm","focused","isProjectListOpen","addTodo","clearTitle","updateTodo","handleSubmit","view","disableEditMode","react_dates","date","onDateChange","onFocusChange","numberOfMonths","small","hideKeyboardShortcutsPanel","displayFormat","orientation","anchorDirection","daySize","isOutsideRange","faProjectDiagram","TodoContainer","todo","completeTodo","deleteTodo","enableEditMode","components_TodoForm","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref2","AddTodoButton","AddTodoContainer","AddTodoContainer_AddTodoButton","_callee2","_context2","_x2","ownProps","overdue","getTodosForDate","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","titleDate","components_TodoContainer","components_AddTodoContainer","TodayView","react","components_TodoListContainer","WeekView","d","InboxViewShell","InboxView","getInboxTodos","ProjectView","getTodosForProject","params","projectName","Redirect","exact","from","Route","path","component","App","components_Sidebar","components_ViewContainer","middleware","applyMiddleware","logger","thunk","store","createStore","mainReducer","ReactDOM","render","BrowserRouter","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1d800fba.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const Types = {\n  TODO_ADD: \"TODO_ADD\",\n  TODO_COMPLETE: \"TODO_COMPLETE\",\n  TODO_DELETE: \"TODO_DELETE\",\n  TODO_UPDATE: \"TODO_UPDATE\",\n  TODO_ENABLE_EDIT: \"TODO_ENABLE_EDIT\",\n  TODO_DISABLE_EDIT: \"TODO_DISABLE_EDIT\",\n  TODO_DISABLE_EDIT_ALL: \"TODO_DISABLE_EDIT_ALL\",\n  ADD_TODO_ENABLE_EDIT: \"ADD_TODO_ENABLE_EDIT\",\n  ADD_TODO_DISABLE_EDIT: \"ADD_TODO_DISABLE_EDIT\",\n  ADD_PROJECT: \"ADD_PROJECT\",\n  // FORM: used for controlling singular todo form open in edit mode\n  FORM: {\n    ADD_TODO: \"ADD_TODO\",\n    TODO: \"TODO\"\n  }\n};\n\nexport const Modes = {\n  READ: \"READ\",\n  EDIT: \"EDIT\"\n};\n","import { Types, Modes } from \"../constants\";\n\nconst todoDefault = {\n  id: null,\n  title: \"\",\n  completed: false,\n  dueDate: \"\",\n  project: \"\", // eventually this will be a projectId\n  mode: Modes.READ\n};\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case Types.TODO_COMPLETE:\n      return state.map(t => {\n        if (t.id === action.id) {\n          return { ...t, completed: true };\n        }\n        return t;\n      });\n\n    case Types.TODO_ADD:\n      return [\n        ...state,\n        {\n          ...todoDefault, // provide default state\n          id: state.length, // once we move todos to back end, will generate unique id's\n          title: action.title,\n          dueDate: action.dueDate,\n          project: action.project || null\n        }\n      ];\n\n    case Types.TODO_UPDATE:\n      return state.map(t => {\n        if (t.id === action.id) {\n          return {\n            ...t,\n            title: action.title,\n            dueDate: action.dueDate,\n            project: action.project || null,\n            mode: Modes.READ\n          };\n        }\n        return t;\n      });\n\n    case Types.TODO_DELETE:\n      return state.filter(t => t.id !== action.id);\n\n    case Types.TODO_ENABLE_EDIT:\n      return state.map(t => {\n        return t.id === action.id\n          ? { ...t, mode: Modes.EDIT }\n          : { ...t, mode: Modes.READ };\n      });\n\n    case Types.TODO_DISABLE_EDIT:\n      return state.map(t => {\n        return t.id === action.id ? { ...t, mode: Modes.READ } : t;\n      });\n\n    case Types.TODO_DISABLE_EDIT_ALL:\n      return state.map(t => ({ ...t, mode: Modes.READ }));\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { Types } from \"../constants\";\n\nconst todoFormId = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_TODO_ENABLE_EDIT:\n      return action.id;\n\n    case Types.ADD_TODO_DISABLE_EDIT:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoFormId;\n","import { Types } from \"../constants\";\n\nconst projectDefault = { name: \"\", subProjects: [] };\n\nconst projects = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_PROJECT:\n      return [...state, { ...projectDefault, name: action.name }];\n    default:\n      return state;\n  }\n};\n\nexport default projects;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport todoFormId from \"./todoForm\";\nimport projects from \"./projects\";\n\nexport default combineReducers({ todos, projects, todoFormId });\n","import React from \"react\";\nimport \"../css/Topbar.scss\";\n\nexport default () => {\n  return (\n    <header className=\"topbar\">\n      <div className=\"inner\">TodoThis</div>\n    </header>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProject } from \"../actions/projects\";\nimport \"../css/ProjectForm.scss\";\n\nclass ProjectForm extends Component {\n  state = {\n    name: \"\"\n  };\n\n  addProject = () => {\n    if (this.state.name.trim() !== \"\") {\n      this.props.addProject(this.state.name.trim());\n      this.props.cancel();\n    }\n  };\n\n  render() {\n    return (\n      this.props.isOpen && (\n        <div className=\"project-form-container\">\n          <div className=\"project-form-input\">\n            <input\n              type=\"text\"\n              autoFocus\n              placeholder=\"Name your project\"\n              value={this.state.name}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") {\n                  this.addProject();\n                }\n              }}\n              onChange={e => this.setState({ name: e.target.value })}\n            />\n          </div>\n          <div className=\"project-form-actions\">\n            <div onClick={this.addProject} className=\"project-form-save\">\n              Add Project\n            </div>\n            <div onClick={this.props.cancel} className=\"project-form-cancel\">\n              Cancel\n            </div>\n          </div>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapFormState = state => {\n  return {};\n};\n\nconst mapActions = dispatch => {\n  return {\n    addProject: name => dispatch(addProject(name))\n  };\n};\n\nexport default connect(\n  mapFormState,\n  mapActions\n)(ProjectForm);\n","import { Types } from \"../constants\";\n\n/**\n * project action creators\n * using redux-thunk templating here for future api calls\n */\n\nexport const addProject = name => {\n  return async dispatch => {\n    dispatch({ type: Types.ADD_PROJECT, name });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInbox, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faCalendar as todayCal,\n  faCalendarAlt\n} from \"@fortawesome/free-regular-svg-icons\";\nimport ProjectForm from \"./ProjectForm\";\nimport \"../css/Sidebar.scss\";\n\nclass Sidebar extends Component {\n  state = {\n    isOpen: false,\n    isProjectFormOpen: false\n  };\n\n  toggleProjects = () => {\n    this.setState(prev => ({ isOpen: !prev.isOpen }));\n  };\n\n  openProjectForm = () => {\n    this.setState({ isProjectFormOpen: true });\n  };\n\n  render() {\n    const { projects, todos, location } = this.props;\n    const { isOpen, isProjectFormOpen } = this.state;\n\n    const page = location.pathname;\n    const today = moment().format(\"DD\");\n    return (\n      <div className=\"sidebar\">\n        <Link\n          className={`nav-link ${page === \"/inbox\" && \"active\"}`}\n          to=\"/inbox\"\n        >\n          <FontAwesomeIcon className=\"nav-link-icon\" icon={faInbox} />\n          Inbox\n          <span className=\"counter\">\n            {todos.filter(t => !t.project).length || \"\"}\n          </span>\n        </Link>\n        <Link\n          className={`nav-link ${page === \"/today\" && \"active\"}`}\n          to=\"/today\"\n        >\n          <FontAwesomeIcon className=\"nav-link-icon today\" icon={todayCal} />\n          <span className=\"today-text\">{today}</span>\n          Today\n          <span className=\"counter\">\n            {todos.filter(t => moment().isSame(t.dueDate, \"day\")).length || \"\"}\n          </span>\n        </Link>\n        <Link className={`nav-link ${page === \"/week\" && \"active\"}`} to=\"/week\">\n          <FontAwesomeIcon className=\"nav-link-icon\" icon={faCalendarAlt} />\n          Next 7 Days\n          <span className=\"counter\">\n            {todos.filter(t =>\n              moment(t.dueDate).isBefore(moment().add(7, \"days\"), \"day\")\n            ).length || \"\"}\n          </span>\n        </Link>\n        <div onClick={this.toggleProjects} className=\"nav-link projects\">\n          <FontAwesomeIcon\n            style={{\n              transform: isOpen ? \"rotate(90deg)\" : \"rotate(0deg)\"\n            }}\n            className=\"nav-link-icon projects\"\n            icon={faAngleRight}\n          />\n          Projects\n          {/* <span className=\"plus\" onClick={this.openProjectForm}>+</span> */}\n        </div>\n        <div\n          style={{\n            height: isOpen ? `${projects.length * 40 + 80}px` : \"0px\"\n          }}\n          className=\"project-lists-container\"\n        >\n          {projects.map(p => {\n            return (\n              <Link\n                key={p.name}\n                className={`nav-link  projects-list-item ${page ===\n                  `/projects/${p.name}` && \"active\"}`}\n                to={`/projects/${p.name}`}\n              >\n                {/* <FontAwesomeIcon className=\"nav-link-icon\" icon={faAngleRight} /> */}\n                {p.name}\n                <span className=\"counter\">\n                  {todos.filter(t => t.project === p.name).length || \"\"}\n                </span>\n              </Link>\n            );\n          })}\n          {(isProjectFormOpen && (\n            <ProjectForm\n              isOpen={isProjectFormOpen}\n              cancel={() => this.setState({ isProjectFormOpen: false })}\n            />\n          )) || (\n            <div\n              onClick={() => this.setState({ isProjectFormOpen: true })}\n              className=\"add-todo-button-container\"\n            >\n              <div className=\"add-todo-button-plus\">+</div>\n              <div className=\"add-todo-button-text\">Add Project</div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapState = state => {\n  return {\n    projects: state.projects,\n    todos: state.todos\n  };\n};\n\nexport default withRouter(connect(mapState)(Sidebar));\n","import { Types } from \"../constants\";\n\n/**\n * todo action creators\n * using redux-thunk templating here for future api calls\n */\n\nexport const completeTodo = id => {\n  return async dispatch => {\n    dispatch({ type: Types.TODO_COMPLETE, id });\n  };\n};\n\nexport const addTodo = (title, dueDate, project) => {\n  return async dispatch => {\n    if (!title) return dispatch({ type: Types.ADD_TODO_DISABLE_EDIT });\n    dispatch({ type: Types.TODO_ADD, title, dueDate, project });\n  };\n};\n\nexport const updateTodo = (id, title, dueDate, project) => {\n  return async dispatch => {\n    if (!title) return dispatch({ type: Types.TODO_DISABLE_EDIT, id });\n    dispatch({ type: Types.TODO_UPDATE, id, title, dueDate, project });\n  };\n};\n\nexport const deleteTodo = id => {\n  return async dispatch => {\n    dispatch({ type: Types.TODO_DELETE, id });\n  };\n};\n\nexport const enableTodoEditMode = ({ type, id }) => {\n  return async dispatch => {\n    // used for controlling singular todo form open in edit mode\n    switch (type) {\n      case Types.FORM.TODO:\n        dispatch({ type: Types.ADD_TODO_DISABLE_EDIT });\n        return dispatch({ type: Types.TODO_ENABLE_EDIT, id });\n\n      case Types.FORM.ADD_TODO:\n        dispatch({ type: Types.TODO_DISABLE_EDIT_ALL });\n        return dispatch({ type: Types.ADD_TODO_ENABLE_EDIT, id });\n\n      default:\n        return;\n    }\n  };\n};\n\nexport const disableTodoEditMode = ({ type, id }) => {\n  return async dispatch => {\n    // used for controlling singular todo form open in edit mode\n    switch (type) {\n      case Types.FORM.TODO:\n        return dispatch({ type: Types.TODO_DISABLE_EDIT, id });\n\n      case Types.FORM.ADD_TODO:\n        return dispatch({ type: Types.ADD_TODO_DISABLE_EDIT });\n\n      default:\n        return;\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { SingleDatePicker } from \"react-dates\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\nimport * as moment from \"moment\";\nimport \"../css/TodoForm.scss\";\n\nclass TodoForm extends Component {\n  state = {\n    title: this.props.title || \"\",\n    dueDate: moment(this.props.dueDate) || null,\n    project: this.props.project || \"\",\n    focused: false,\n    isProjectListOpen: false\n  };\n\n  addTodo = () => {\n    this.props.addTodo(\n      this.state.title.trim(),\n      this.state.dueDate,\n      this.state.project\n    );\n    this.clearTitle();\n  };\n\n  updateTodo = () => {\n    this.props.updateTodo(\n      this.state.title.trim(),\n      this.state.dueDate,\n      this.state.project\n    );\n  };\n\n  handleSubmit = () => {\n    if (this.props.view && this.props.view === \"UPDATE\") {\n      this.updateTodo();\n    } else {\n      this.addTodo();\n    }\n  };\n\n  clearTitle = () => this.setState({ title: \"\" });\n\n  render() {\n    const { view, disableEditMode, projects } = this.props;\n    return (\n      <div className=\"todo-form-container\">\n        {/* Input Row */}\n\n        <div className=\"todo-form-input\">\n          <div className=\"title\">\n            <input\n              type=\"text\"\n              autoFocus\n              value={this.state.title}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") {\n                  this.handleSubmit();\n                }\n              }}\n              onChange={e => this.setState({ title: e.target.value })}\n            />\n            {this.state.isProjectListOpen && (\n              <div className=\"todo-form-project-list\">\n                {projects.map(p => {\n                  return (\n                    <div\n                      key={p.name}\n                      className=\"todo-form-project-item\"\n                      onClick={() =>\n                        this.setState({\n                          project: p.name,\n                          isProjectListOpen: false\n                        })\n                      }\n                    >\n                      {p.name}\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n          <SingleDatePicker\n            date={this.state.dueDate}\n            onDateChange={dueDate => this.setState({ dueDate })}\n            focused={this.state.focused}\n            onFocusChange={({ focused }) => this.setState({ focused })}\n            id=\"schedule\"\n            numberOfMonths={1}\n            small={true} //  input size\n            hideKeyboardShortcutsPanel={true}\n            displayFormat=\"MMM DD\"\n            orientation=\"horizontal\"\n            anchorDirection=\"left\"\n            daySize={30}\n            isOutsideRange={() => false}\n          />\n        </div>\n\n        {/* Actions Row */}\n\n        <div className=\"todo-form-actions\">\n          <div onClick={this.handleSubmit} className=\"todo-form-save\">\n            {(view && view === \"UPDATE\" && \"Save\") || \"Add Task\"}\n          </div>\n          <div onClick={disableEditMode} className=\"todo-form-cancel\">\n            Cancel\n          </div>\n\n          <FontAwesomeIcon\n            onClick={() =>\n              this.setState(prev => ({\n                isProjectListOpen: !prev.isProjectListOpen\n              }))\n            }\n            className=\"todo-form-projects-button\"\n            icon={faProjectDiagram}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapFormState = state => {\n  return {\n    projects: state.projects\n  };\n};\n\nexport default connect(mapFormState)(TodoForm);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Modes, Types } from \"../constants\";\nimport {\n  completeTodo,\n  updateTodo,\n  deleteTodo,\n  enableTodoEditMode,\n  disableTodoEditMode\n} from \"../actions/todos\";\nimport TodoForm from \"./TodoForm\";\nimport \"../css/TodoContainer.scss\";\n\nclass TodoContainer extends Component {\n  updateTodo = (title, dueDate, project) => {\n    this.props.updateTodo(this.props.todo.id, title.trim(), dueDate, project);\n  };\n\n  render() {\n    const {\n      todo,\n      completeTodo,\n      deleteTodo,\n      enableEditMode,\n      disableEditMode\n    } = this.props;\n\n    switch (todo.mode) {\n      case Modes.EDIT:\n        return (\n          <TodoForm\n            view=\"UPDATE\"\n            title={todo.title}\n            dueDate={todo.dueDate}\n            project={todo.project}\n            updateTodo={this.updateTodo}\n            disableEditMode={() =>\n              disableEditMode({ type: Types.FORM.TODO, id: todo.id })\n            }\n          />\n        );\n      default:\n        return (\n          <div className=\"todo-read-container\">\n            <div className=\"todo-complete-btn-container\">\n              <div\n                onClick={() => completeTodo(todo.id)}\n                className=\"todo-complete-btn\"\n              />\n            </div>\n\n            <div\n              onClick={() =>\n                enableEditMode({ type: Types.FORM.TODO, id: todo.id })\n              }\n              className=\"todo-title\"\n            >\n              {todo.title}\n            </div>\n            <Link\n              to={(todo.project && `/projects/${todo.project}`) || `/inbox`}\n              className=\"todo-assigned-project\"\n            >\n              {(todo.project && todo.project) || \"Inbox\"}\n            </Link>\n            <div\n              className=\"todo-delete-container\"\n              onClick={() => deleteTodo(todo.id)}\n            >\n              <div className=\"todo-delete-btn\">X</div>\n            </div>\n          </div>\n        );\n    }\n  }\n}\n\nconst mapState = () => ({});\n\nconst mapActions = dispatch => {\n  return {\n    completeTodo: id => dispatch(completeTodo(id)),\n    updateTodo: (id, title, dueDate, project) =>\n      dispatch(updateTodo(id, title, dueDate, project)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    enableEditMode: ({ type, id }) =>\n      dispatch(enableTodoEditMode({ type, id })),\n    disableEditMode: ({ type, id }) =>\n      dispatch(disableTodoEditMode({ type, id }))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapActions\n)(TodoContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addTodo,\n  enableTodoEditMode,\n  disableTodoEditMode\n} from \"../actions/todos\";\nimport { Modes, Types } from \"../constants\";\nimport TodoForm from \"./TodoForm\";\nimport \"../css/AddTodoContainer.scss\";\n\nconst AddTodoButton = ({ enableEditMode }) => {\n  return (\n    <div onClick={enableEditMode} className=\"add-todo-button-container\">\n      <div className=\"add-todo-button-plus\">+</div>\n      <div className=\"add-todo-button-text\">Add Task</div>\n    </div>\n  );\n};\n\nclass AddTodoContainer extends Component {\n  addTodo = (title, dueDate, project) => {\n    this.props.addTodo(title.trim(), dueDate, project);\n  };\n\n  render() {\n    const {\n      project,\n      dueDate,\n      enableEditMode,\n      disableEditMode,\n      mode\n    } = this.props;\n\n    switch (mode) {\n      case Modes.READ:\n        return (\n          <AddTodoButton\n            enableEditMode={() =>\n              enableEditMode({\n                type: Types.FORM.ADD_TODO,\n                // when date not provided its a project list\n                // when project not provided its an inbox list\n                id: dueDate || project || \"Inbox\"\n              })\n            }\n          />\n        );\n\n      case Modes.EDIT:\n        return (\n          <TodoForm\n            addTodo={this.addTodo}\n            disableEditMode={() =>\n              disableEditMode({ type: Types.FORM.ADD_TODO })\n            }\n            project={project}\n            dueDate={dueDate}\n          />\n        );\n\n      default:\n        return;\n    }\n  }\n}\n\nconst mapState = () => ({});\n\nconst mapActions = dispatch => {\n  return {\n    addTodo: (title, dueDate, project) =>\n      dispatch(addTodo(title, dueDate, project)),\n    enableEditMode: ({ type, id }) =>\n      dispatch(enableTodoEditMode({ type, id })),\n    disableEditMode: ({ type, id }) =>\n      dispatch(disableTodoEditMode({ type, id }))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapActions\n)(AddTodoContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as moment from \"moment\";\nimport TodoContainer from \"./TodoContainer\";\nimport AddTodoContainer from \"./AddTodoContainer\";\nimport { Modes } from \"../constants\";\nimport \"../css/TodoListContainer.scss\";\nimport { getTodosForDate } from \"../selectors\";\n\n// Currently only used for date based lists\n// refactor to be date or project based\nconst TodoListContainer = ({ date, todos, todoFormId }) => {\n  const title = date\n    ? moment(date).calendar(null, {\n        sameDay: \"[Today]\",\n        nextDay: \"[Tomorrow]\",\n        nextWeek: \"dddd\",\n        lastDay: \"[Overdue]\",\n        lastWeek: \"[Overdue]\",\n        sameElse: \"[Overdue]\"\n      })\n    : \"Overdue\";\n\n  const titleDate =\n    title === (\"Today\" || \"Tomorrow\")\n      ? moment(date).format(\"ddd MMM D\")\n      : date\n        ? moment(date).format(\"MMM D\")\n        : \"\";\n\n  const dueDate = moment(date).format(\"YYYY-MM-DD\");\n\n  // if the todo list title is overdue and there are no todos, don't render a list\n  if (title === \"Overdue\" && todos.length === 0) return <div />;\n\n  return (\n    <div className=\"todo-list-container\">\n      <header className=\"todo-list-header\">\n        <div className={`todo-list-title ${title === \"Overdue\" && \"overdue\"}`}>\n          {title}\n        </div>\n        <div className=\"todo-list-date\">{titleDate}</div>\n      </header>\n\n      <div className=\"todo-list-content\">\n        {todos.map(todo => (\n          <TodoContainer key={todo.id} todo={todo} />\n        ))}\n      </div>\n\n      {/* If the title of this todo list isn't Overdue render the Add Todo Container */}\n      {(title !== \"Overdue\" && (\n        <AddTodoContainer\n          dueDate={dueDate}\n          mode={todoFormId === dueDate ? Modes.EDIT : Modes.READ}\n        />\n      )) || <div className=\"todo-list-add-todo-placeholder\" />}\n    </div>\n  );\n};\n\nconst mapState = (state, ownProps) => {\n  return {\n    todos: getTodosForDate(state, ownProps.dueDate, ownProps.overdue),\n    todoFormId: state.todoFormId\n  };\n};\n\nexport default connect(mapState)(TodoListContainer);\n","import * as moment from \"moment\";\n\nexport const getInboxTodos = state => state.todos.filter(t => !t.project);\n\nexport const getTodosForProject = (state, project) =>\n  state.todos.filter(t => !t.completed && t.project === project);\n\nexport const getTodosForDate = (state, date, overdue) =>\n  overdue\n    ? state.todos.filter(\n        t =>\n          !t.completed &&\n          moment(t.dueDate, \"YYYY-MM-DD\").isBefore(moment(), \"day\")\n      )\n    : state.todos.filter(\n        t => !t.completed && moment(t.dueDate, \"YYYY-MM-DD\").isSame(date, \"day\")\n      );\n","import React, { Fragment } from \"react\";\nimport TodoListContainer from \"./TodoListContainer\";\nimport * as moment from \"moment\";\n\nexport const TodayView = () => {\n  return (\n    <Fragment>\n      <header className=\"view-header\">Today</header>\n      <TodoListContainer date={moment()} />\n    </Fragment>\n  );\n};\n\nexport const WeekView = () => {\n  const days = [0, 1, 2, 3, 4, 5, 6];\n\n  return (\n    <Fragment>\n      <header className=\"view-header week\">Next 7 Days</header>\n      <TodoListContainer overdue />\n      {days.map(d => (\n        <TodoListContainer key={d} date={moment().add(d, \"days\")} />\n      ))}\n    </Fragment>\n  );\n};\n","import React, { Fragment, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modes } from \"../constants\";\nimport { enableTodoEditMode, disableTodoEditMode } from \"../actions/todos\";\nimport TodoContainer from \"./TodoContainer\";\nimport AddTodoContainer from \"./AddTodoContainer\";\nimport { getTodosForProject, getInboxTodos } from \"../selectors\";\n\nclass InboxViewShell extends Component {\n  render() {\n    const { todos, todoFormId } = this.props;\n\n    return (\n      <div>\n        <header className=\"view-header\">Inbox</header>\n        {todos.map(todo => (\n          <TodoContainer key={todo.id} todo={todo} />\n        ))}\n        <AddTodoContainer\n          mode={todoFormId === \"Inbox\" ? Modes.EDIT : Modes.READ}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapInboxState = state => {\n  return {\n    todos: getInboxTodos(state),\n    todoFormId: state.todoFormId\n  };\n};\n\nconst mapActionsInbox = dispatch => {\n  return {\n    enableTodoEditMode: id => dispatch(enableTodoEditMode(id)),\n    disableTodoEditMode: id => dispatch(disableTodoEditMode(id))\n  };\n};\n\nexport const InboxView = connect(\n  mapInboxState,\n  mapActionsInbox\n)(InboxViewShell);\n\nconst ProjectViewShell = ({ projectName, todos, projects, todoFormId }) => {\n  switch (projectName) {\n    // eventually this will lead to being able to display multiple layers of projects\n    case \"Projects\":\n      return (\n        <Fragment>\n          {projects.map(p => {\n            return (\n              <div key={p.name} className=\"todo-list-container\">\n                <header className=\"todo-list-header project\">{p.name}</header>\n                {todos.filter(t => t.project === p.name).map(todo => (\n                  <TodoContainer key={todo.id} todo={todo} />\n                ))}\n\n                <AddTodoContainer\n                  project={p.name}\n                  mode={todoFormId === p.name ? Modes.EDIT : Modes.READ}\n                />\n              </div>\n            );\n          })}\n        </Fragment>\n      );\n\n    default:\n      return (\n        <div className=\"todo-list-container\">\n          <header className=\"todo-list-header project\">{projectName}</header>\n          {todos.map(todo => (\n            <TodoContainer key={todo.title} todo={todo} />\n          ))}\n          <AddTodoContainer\n            project={projectName}\n            mode={todoFormId === projectName ? Modes.EDIT : Modes.READ}\n          />\n        </div>\n      );\n  }\n};\n\nconst mapProjectsState = (state, ownProps) => {\n  return {\n    todos: getTodosForProject(state, ownProps.match.params.projectName),\n    projectName: ownProps.match.params.projectName || \"Projects\",\n    projects: state.projects,\n    todoFormId: state.todoFormId\n  };\n};\n\nexport const ProjectView = connect(mapProjectsState)(ProjectViewShell);\n","import React from \"react\";\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\nimport { TodayView, WeekView } from \"./DateViews\";\nimport { InboxView, ProjectView } from \"./ProjectViews\";\nimport \"../css/ViewContainer.scss\";\n\nconst ViewContainer = () => {\n  return (\n    <article className=\"view-container\">\n      <Redirect to=\"/week\" exact from=\"/\" />\n      <Route path=\"/inbox\" component={InboxView} />\n      <Route path=\"/today\" component={TodayView} />\n      <Route path=\"/week\" component={WeekView} />\n      <Route path=\"/projects/:projectName?\" component={ProjectView} />\n    </article>\n  );\n};\n\nexport default withRouter(ViewContainer);\n","import React, { Fragment } from \"react\";\nimport Topbar from \"./Topbar\";\nimport Sidebar from \"./Sidebar\";\nimport ViewContainer from \"./ViewContainer\";\nimport \"../css/App.scss\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Topbar />\n      <div className=\"grid-container\">\n        <Sidebar />\n        <ViewContainer />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport mainReducer from \"./reducers/index.js\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nconst middleware = applyMiddleware(logger, thunk);\nconst store = createStore(mainReducer, {}, middleware);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}